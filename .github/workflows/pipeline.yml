name: .NET Pipeline

# Steps Information:

# Setup .Net
# Checkout
# Install dotnet format - installs the dotnet format tool which will be used for the linting
# Linter - validates the code against the editorconfig and throws an error if any of the rules fail
# Build - builds the dlls
# Test - Runs the unit tests defined in the project
# Generate Docs - generates the rules for the docs by extracting that information from the rule attribute, and the xml comments
# Tree Docs - purely a debuggin step to see what doc files were written by the powershell
# Commit Docs - Commits any changes if there are any to the repo as the user Github Action
# Push Docs - pushes the commit if there is one to the repo

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x' # SDK Version to use; x will use the latest version of the 5.0 channel
    - uses: actions/checkout@v2

    # LINTER 
    # Format the output of dotnet format
    - name: Add dotnet-format problem matcher
      uses: xt0rted/dotnet-format-problem-matcher@v1

    # Install dotnet format as a global tool
    - name: Install dotnet format
      run: dotnet tool update --global dotnet-format

    - name: Run dotnet format
      run: dotnet format --check --verbosity diagnostic
      
    # BUILD
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    # RUN TESTS
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    # GENERATE DOCS 
    - name: Generate Docs
      shell: powershell
      run: .\.github\workflows\generate_docs.ps1 -ParentDirectory "${{ github.workspace }}" -BuildDirectory "${{ github.workspace }}\SqlServer.Rules\bin\Release\net472\"
    
    # TREE DOCS - JUST TO GIVE A VISUAL OF THE FILES GENERATED FOR DEBUG PURPOSES
    - name: Write Docs Tree
      run: tree /f .\docs

    # COMMIT DOCS - ONLY IF THERE ARE FILE CHANGES
    - name: Commit files  
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./docs
        git diff-index --quiet HEAD || git commit -m "Updating the repository docs folder"   
    
    # PUSH DOCS
    - name: Push changes  
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
      
