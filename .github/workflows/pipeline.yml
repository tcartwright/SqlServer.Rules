name: .NET Build Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: windows-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x' # SDK Version to use; x will use the latest version of the 5.0 channel
    #- name: "Hello"
    #  run: Write-Output "Hello workspace is - ${{ github.workspace }}"
      
  lint_csharp:
    runs-on: windows-latest
    needs: setup
 
    steps:
    - uses: actions/checkout@v2
    # Format the output of dotnet format
    - name: Add dotnet-format problem matcher
      uses: xt0rted/dotnet-format-problem-matcher@v1

    # Install dotnet format as a global tool
    - name: Install dotnet format
      run: dotnet tool update --global dotnet-format

    # Run dotnet format --dry-run --check
    # By default, the task ensure the exit code is 0
    # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
    # So the task will fail
    - name: Run dotnet format
      run: dotnet format --check --verbosity diagnostic
      
  build:
    runs-on: windows-latest
    needs: lint_csharp

    steps:
    - uses: actions/checkout@v2
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
  gen-docs:
    runs-on: windows-latest
    needs: build

    steps:  
    - name: Generate Docs
      shell: pwsh
      run: powershell ".\generate_docs.ps1" -path "${{ github.workspace }}"
    - name: Commit files  
      run: |
        git config --local user.name  ${{ github.actor }}
        git add ./docs
        git commit -m "Updating the repository docs folder"      
    - name: Push changes  
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
      
